{
  "coc.preferences.formatOnType": false,
  "coc.preferences.jumpCommand": "edit",
  "diagnostic.locationlist": true,
  "suggest.enablePreview": true,
  "suggest.timeout": 1000,
  "suggest.triggerAfterInsertEnter": true,
  "codeLens.enable": true,
  "diagnostic.virtualText": true,
  "coc.preferences.hoverTarget": "preview",
  "diagnostic.virtualTextLines": 1,
  "coc.preferences.colorSupport": true,
  "html.filetypes": ["html", "eelixir", "eex"],
  "html.enable": true,
  "languageserver": {
    "elixirls": {
      "command": "/home/hq1/dev/elixir-ls/rel/language_server.sh",
      "args": [],
      "filetypes": ["elixir"],
      "trace.server": "verbose",
      "rootPatterns": ["mix.exs"],
      "initializationOptions": {
      }
    }
  },
  "diagnostic-languageserver.filetypes": {
    // lint `sh` (includes `bash`) files
    "sh": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    // format `sh` (includes `bash`) files using formatter defined below
    "sh": "shfmt"
  },
  "diagnostic-languageserver.formatters": {
    // define our formatter so that we can reference it from
    // `diagnostic-languageserver.formatFiletypes`
    "shfmt": {
      "command": "shfmt",
      // all the below args are entirely optional
      // primarily listed here to call out that flags which take an
      // argument (such as `-i <num-spaces>` for specifying indentation)
      // should be split into two strings, the flag and then the value
      "args": ["-i", "2", "-bn", "-ci", "-sr"]
    }
  }
}
